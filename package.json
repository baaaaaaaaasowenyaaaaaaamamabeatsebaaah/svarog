{
  "name": "svarog-ui-monorepo",
  "private": true,
  "type": "module",
  "workspaces": [
    "packages/*",
    "packages/@svarog-ui/*"
  ],
  "scripts": {
    "install:all": "npm install --workspaces --include-workspace-root",
    "clean": "npm run clean:dist && npm run clean:packages",
    "clean:dist": "rm -rf dist",
    "clean:packages": "rm -rf packages/*/dist && rm -rf packages/@svarog-ui/*/dist && rm -rf packages/svarog-ui-core/src/components && rm -rf packages/svarog-ui-core/src/utils",
    "build": "npm run build:all",
    "build:all": "npm run clean:packages && npm run build:core && npm run build:themes && npm run build:storybook",
    "build:core": "node scripts/build-core.mjs",
    "prepare:core": "node scripts/prepare-core-package.mjs",
    "build:themes": "npm run build:theme-default && npm run build:theme-cabalou && npm run build:theme-muchandy",
    "build:theme-default": "node scripts/build-theme.mjs default",
    "build:theme-cabalou": "node scripts/build-theme.mjs cabalou",
    "build:theme-muchandy": "node scripts/build-theme.mjs muchandy",
    "build:storybook": "webpack --config .storybook/webpack.config.js --mode production",
    "dev": "webpack serve --config .storybook/webpack.config.js --mode development",
    "start": "npm run dev",
    "start:prod": "node server.mjs",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:integration": "npm run build:all && node scripts/test-integration.mjs",
    "test:packages": "npm run test:core && npm run test:themes",
    "test:core": "cd packages/svarog-ui-core && node -e \"console.log('Testing core...'); import('./dist/index.js').then(m => console.log('✅ Core import works:', Object.keys(m).length, 'exports')).catch(e => { console.error('❌ Core import failed:', e.message); process.exit(1); })\"",
    "test:themes": "npm run test:theme-default && npm run test:theme-cabalou && npm run test:theme-muchandy",
    "test:theme-default": "cd packages/@svarog-ui/theme-default && node -e \"import('./dist/index.js').then(m => console.log('✅ Default theme works:', m.default?.name)).catch(e => { console.error('❌ Default theme failed:', e.message); process.exit(1); })\"",
    "test:theme-cabalou": "cd packages/@svarog-ui/theme-cabalou && node -e \"import('./dist/index.js').then(m => console.log('✅ Cabalou theme works:', m.default?.name)).catch(e => { console.error('❌ Cabalou theme failed:', e.message); process.exit(1); })\"",
    "test:theme-muchandy": "cd packages/@svarog-ui/theme-muchandy && node -e \"import('./dist/index.js').then(m => console.log('✅ Muchandy theme works:', m.default?.name)).catch(e => { console.error('❌ Muchandy theme failed:', e.message); process.exit(1); })\"",
    "lint": "eslint \"src/**/*.js\" --quiet",
    "format": "prettier --write \"src/**/*.{js,css}\"",
    "create-component": "node scripts/create-component.js",
    "check-stories": "node scripts/check-stories.js",
    "update-stories": "node scripts/update-stories.js",
    "prepublishOnly": "npm run build:all && npm run test:packages",
    "pack:test": "npm run build:all && npm pack --workspaces && ls -la *.tgz",
    "size": "npm run build:all && echo '=== Core Package ===' && ls -lh packages/svarog-ui-core/dist/ && echo '=== Theme Packages ===' && ls -lh packages/@svarog-ui/*/dist/",
    "publish:all": "npm run build:all && npm run test:packages && lerna publish",
    "publish:core": "cd packages/svarog-ui-core && npm publish",
    "publish:themes": "cd packages/@svarog-ui/theme-default && npm publish && cd ../theme-cabalou && npm publish && cd ../theme-muchandy && npm publish",
    "link:local": "npm run build:all && cd packages/svarog-ui-core && npm link",
    "unlink:local": "cd packages/svarog-ui-core && npm unlink",
    "validate": "npm run lint && npm run test && npm run build:all && npm run test:packages",
    "ci-check": "node scripts/ci-checks.js"
  },
  "devDependencies": {
    "@babel/core": "^7.24.7",
    "@babel/preset-env": "^7.24.7",
    "@eslint/eslintrc": "^3.1.0",
    "@eslint/js": "^9.5.0",
    "babel-loader": "^10.0.0",
    "css": "^3.0.0",
    "css-loader": "^7.1.2",
    "css-minimizer-webpack-plugin": "^7.0.2",
    "esbuild": "^0.19.0",
    "eslint": "^9.27.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-vitest": "^0.5.4",
    "express": "^4.18.2",
    "html-webpack-plugin": "^5.6.0",
    "husky": "^9.0.11",
    "lerna": "^8.0.0",
    "lint-staged": "^16.0.0",
    "mini-css-extract-plugin": "^2.9.2",
    "prettier": "^3.5.3",
    "style-loader": "^4.0.0",
    "terser-webpack-plugin": "^5.3.14",
    "vite": "^6.3.5",
    "vitest": "^3.1.4",
    "webpack": "^5.92.0",
    "webpack-cli": "^6.0.1",
    "webpack-dev-server": "^5.0.4"
  },
  "lint-staged": {
    "*.js": "eslint --cache --fix",
    "*.{js,css,md}": "prettier --write"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/baaaaaaaaasowenyaaaaaaamamabeatsebaaah/svarog.git"
  },
  "keywords": [
    "components",
    "ui",
    "library",
    "vanilla-js",
    "modular",
    "theme",
    "css",
    "javascript",
    "jsdoc"
  ],
  "author": "Sebastian Huber",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/baaaaaaaaasowenyaaaaaaamamabeatsebaaah/svarog/issues"
  },
  "homepage": "https://github.com/baaaaaaaaasowenyaaaaaaamamabeatsebaaah/svarog#readme",
  "engines": {
    "node": ">=18.0.0"
  }
}
